/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package fuzzymulticriteriadecisionmaking;

import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author gonzalowtf
 */
public class Entrada extends javax.swing.JFrame {

    /**
     * Creates new form Entrada
     */
    public Entrada() {
        initComponents();
        setTitle("Fuzzy Multi-Criteria Method of Group Decision Making");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fuzzymulticriteriadecisionmaking/tree.jpg"))); // NOI18N

        jButton1.setText("beggin");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(291, 291, 291)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 550, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Main m = new Main();
try{
        String url = System.getProperty("user.dir") + "\\datafuzzy.db";

        Conn cn = new Conn(url);
        //cn.c.setAutoCommit(false);
        cn.stmt = cn.c.createStatement();
        
        String sql = "CREATE TABLE IF NOT EXISTS `problems` (\n" +
"	`idproblem`	INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT UNIQUE,\n" +
"	`name`	TEXT\n" +
") "; 
        cn.stmt.executeUpdate(sql);
         sql = "CREATE TABLE IF NOT EXISTS `decisors` (\n" +
"	`iddecisor`	INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT UNIQUE,\n" +
"	`name`	TEXT,\n" +
"	`idproblem`	INTEGER\n" +
") \n ";
cn.stmt.executeUpdate(sql);
          sql = "CREATE TABLE IF NOT EXISTS `dc` (\n" +
"	`iddc`	INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT UNIQUE,\n" +
"	`Iddecisor`	INTEGER NOT NULL,\n" +
"	`idcriteria`	INTEGER NOT NULL,\n" +
"	`value`	TEXT,\n" +
"	`idproblem`	INTEGER NOT NULL\n" +
")";
cn.stmt.executeUpdate(sql);
                sql = "CREATE TABLE IF NOT EXISTS `da` (\n" +
"	`idda`	INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT UNIQUE,\n" +
"	`iddecisor`	INTEGER NOT NULL,\n" +
"	`idalternative`	INTEGER NOT NULL,\n" +
"	`value`	TEXT,\n" +
"	`idproblem`	INTEGER NOT NULL\n" +
")";
cn.stmt.executeUpdate(sql);
                sql = "CREATE TABLE IF NOT EXISTS `criterias` (\n" +
"	`idcriteria`	INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT UNIQUE,\n" +
"	`name`	TEXT,\n" +
"	`idproblem`	INTEGER NOT NULL\n" +
") ";
cn.stmt.executeUpdate(sql);
                sql = "CREATE TABLE IF NOT EXISTS `alternatives` (\n" +
"	`idalternative`	INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT UNIQUE,\n" +
"	`name`	TEXT,\n" +
"	`idproblem`	INTEGER NOT NULL\n" +
")";
cn.stmt.executeUpdate(sql);
                sql = "CREATE TABLE IF NOT EXISTS `weights` (\n" +
"	`idw`	INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT UNIQUE,\n" +
"	`name`	TEXT,\n" +
"	`w1`	NUMERIC,\n" +
"	`w2`	NUMERIC,\n" +
"	`w3`	NUMERIC,\n" +
"	`kind`	TEXT\n" +
")";
        cn.stmt.executeUpdate(sql);
        cn.stmt.close();
        cn.c.close();
        
        try{
                    url = System.getProperty("user.dir") + "\\datafuzzy.db";
                    cn = new Conn(url);
                    //cn.c.setAutoCommit(false);
                    cn.stmt = cn.c.createStatement();
                    sql = "Select * from weights where kind ='decisors' and name = 'Normal'";
                    ResultSet rs = cn.stmt.executeQuery(sql);
                    boolean bool = false;
                    while(rs.next()){
                        bool = true;
                    }

                    if(bool == false){
                     sql = "insert into weights values(null, 'Normal',0,0,4,'decisors')";
                     cn.stmt.executeUpdate(sql);
                     //JOptionPane.showMessageDialog(null, "inserted");
                    }

                    rs.close();
                    cn.stmt.close();
                    cn.c.close();
        }catch(SQLException err){
                    JOptionPane.showMessageDialog(null, "Data Base Connection Problem (new p 208) "+ err.toString());
                }
        
        
         try{
                    url = System.getProperty("user.dir") + "\\datafuzzy.db";
                    cn = new Conn(url);
                    //cn.c.setAutoCommit(false);
                    cn.stmt = cn.c.createStatement();
                    sql = "Select * from weights where kind ='decisors' and name = 'Important'";
                    ResultSet rs = cn.stmt.executeQuery(sql);
                    boolean bool = false;
                    while(rs.next()){
                        bool = true;
                    }

                    if(bool == false){
                     sql = "insert into weights values(null, 'Important',2,5,8,'decisors')";
                     cn.stmt.executeUpdate(sql);
                     //JOptionPane.showMessageDialog(null, "inserted");
                    }

                    rs.close();
                    cn.stmt.close();
                    cn.c.close();
        }catch(SQLException err){
                    JOptionPane.showMessageDialog(null, "Data Base Connection Problem (new p 208) "+ err.toString());
                }
         
         
         
          try{
                    url = System.getProperty("user.dir") + "\\datafuzzy.db";
                    cn = new Conn(url);
                    //cn.c.setAutoCommit(false);
                    cn.stmt = cn.c.createStatement();
                    sql = "Select * from weights where kind ='decisors' and name = 'Very Important'";
                    ResultSet rs = cn.stmt.executeQuery(sql);
                    boolean bool = false;
                    while(rs.next()){
                        bool = true;
                    }

                    if(bool == false){
                     sql = "insert into weights values(null, 'Very Important',5,8,10,'decisors')";
                     cn.stmt.executeUpdate(sql);
                     //JOptionPane.showMessageDialog(null, "inserted");
                    }

                    rs.close();
                    cn.stmt.close();
                    cn.c.close();
        }catch(SQLException err){
                    JOptionPane.showMessageDialog(null, "Data Base Connection Problem (new p 208) "+ err.toString());
                }
          
           try{
                    url = System.getProperty("user.dir") + "\\datafuzzy.db";
                    cn = new Conn(url);
                    //cn.c.setAutoCommit(false);
                    cn.stmt = cn.c.createStatement();
                    sql = "Select * from weights where kind ='decisors' and name = 'Most Important'";
                    ResultSet rs = cn.stmt.executeQuery(sql);
                    boolean bool = false;
                    while(rs.next()){
                        bool = true;
                    }

                    if(bool == false){
                     sql = "insert into weights values(null, 'Most Important',8,10,10,'decisors')";
                     cn.stmt.executeUpdate(sql);
                     //JOptionPane.showMessageDialog(null, "inserted");
                    }

                    rs.close();
                    cn.stmt.close();
                    cn.c.close();
        }catch(SQLException err){
                    JOptionPane.showMessageDialog(null, "Data Base Connection Problem (new p 208) "+ err.toString());
                }
           
            try{
                    url = System.getProperty("user.dir") + "\\datafuzzy.db";
                    cn = new Conn(url);
                    //cn.c.setAutoCommit(false);
                    cn.stmt = cn.c.createStatement();
                    sql = "Select * from weights where kind ='criterias' and name = 'Same Importance'";
                    ResultSet rs = cn.stmt.executeQuery(sql);
                    boolean bool = false;
                    while(rs.next()){
                        bool = true;
                    }

                    if(bool == false){
                     sql = "insert into weights values(null, 'Same Importance',0,1,2,'criterias')";
                     cn.stmt.executeUpdate(sql);
                     //JOptionPane.showMessageDialog(null, "inserted");
                    }

                    rs.close();
                    cn.stmt.close();
                    cn.c.close();
        }catch(SQLException err){
                    JOptionPane.showMessageDialog(null, "Data Base Connection Problem (new p 208) "+ err.toString());
                }
            
            
             try{
                    url = System.getProperty("user.dir") + "\\datafuzzy.db";
                    cn = new Conn(url);
                    //cn.c.setAutoCommit(false);
                    cn.stmt = cn.c.createStatement();
                    sql = "Select * from weights where kind ='criterias' and name = 'Weak Importance'";
                    ResultSet rs = cn.stmt.executeQuery(sql);
                    boolean bool = false;
                    while(rs.next()){
                        bool = true;
                    }

                    if(bool == false){
                     sql = "insert into weights values(null, 'Weak Importance',1,2,3,'criterias')";
                     cn.stmt.executeUpdate(sql);
                     //JOptionPane.showMessageDialog(null, "inserted");
                    }

                    rs.close();
                    cn.stmt.close();
                    cn.c.close();
        }catch(SQLException err){
                    JOptionPane.showMessageDialog(null, "Data Base Connection Problem (new p 208) "+ err.toString());
                }
             
              try{
                    url = System.getProperty("user.dir") + "\\datafuzzy.db";
                    cn = new Conn(url);
                    //cn.c.setAutoCommit(false);
                    cn.stmt = cn.c.createStatement();
                    sql = "Select * from weights where kind ='criterias' and name = 'Light Importance'";
                    ResultSet rs = cn.stmt.executeQuery(sql);
                    boolean bool = false;
                    while(rs.next()){
                        bool = true;
                    }

                    if(bool == false){
                     sql = "insert into weights values(null, 'Light Importance',2,3,4,'criterias')";
                     cn.stmt.executeUpdate(sql);
                     //JOptionPane.showMessageDialog(null, "inserted");
                    }

                    rs.close();
                    cn.stmt.close();
                    cn.c.close();
        }catch(SQLException err){
                    JOptionPane.showMessageDialog(null, "Data Base Connection Problem (new p 208) "+ err.toString());
                }
              
              
               try{
                    url = System.getProperty("user.dir") + "\\datafuzzy.db";
                    cn = new Conn(url);
                    //cn.c.setAutoCommit(false);
                    cn.stmt = cn.c.createStatement();
                    sql = "Select * from weights where kind ='criterias' and name = 'Importance between light and accentuated'";
                    ResultSet rs = cn.stmt.executeQuery(sql);
                    boolean bool = false;
                    while(rs.next()){
                        bool = true;
                    }

                    if(bool == false){
                     sql = "insert into weights values(null, 'Importance between light and accentuated',3,4,5,'criterias')";
                     cn.stmt.executeUpdate(sql);
                     //JOptionPane.showMessageDialog(null, "inserted");
                    }

                    rs.close();
                    cn.stmt.close();
                    cn.c.close();
        }catch(SQLException err){
                    JOptionPane.showMessageDialog(null, "Data Base Connection Problem (new p 208)   327 "+ err.toString());
                }
               
               
                try{
                    url = System.getProperty("user.dir") + "\\datafuzzy.db";
                    cn = new Conn(url);
                    //cn.c.setAutoCommit(false);
                    cn.stmt = cn.c.createStatement();
                    sql = "Select * from weights where kind ='criterias' and name = 'Importance accentuated'";
                    ResultSet rs = cn.stmt.executeQuery(sql);
                    boolean bool = false;
                    while(rs.next()){
                        bool = true;
                    }

                    if(bool == false){
                     sql = "insert into weights values(null, 'Importance accentuated',3,5,7,'criterias')";
                     cn.stmt.executeUpdate(sql);
                     //JOptionPane.showMessageDialog(null, "inserted");
                    }

                    rs.close();
                    cn.stmt.close();
                    cn.c.close();
        }catch(SQLException err){
                    JOptionPane.showMessageDialog(null, "Data Base Connection Problem (new p 208) "+ err.toString());
                }
                
                
                
                 try{
                    url = System.getProperty("user.dir") + "\\datafuzzy.db";
                    cn = new Conn(url);
                    //cn.c.setAutoCommit(false);
                    cn.stmt = cn.c.createStatement();
                    sql = "Select * from weights where kind ='criterias' and name = 'Strong Importance'";
                    ResultSet rs = cn.stmt.executeQuery(sql);
                    boolean bool = false;
                    while(rs.next()){
                        bool = true;
                    }

                    if(bool == false){
                     sql = "insert into weights values(null, 'Strong Importance',5,6,7,'criterias')";
                     cn.stmt.executeUpdate(sql);
                     //JOptionPane.showMessageDialog(null, "inserted");
                    }

                    rs.close();
                    cn.stmt.close();
                    cn.c.close();
        }catch(SQLException err){
                    JOptionPane.showMessageDialog(null, "Data Base Connection Problem (new p 208) "+ err.toString());
                }
                 
                 
                  try{
                    url = System.getProperty("user.dir") + "\\datafuzzy.db";
                    cn = new Conn(url);
                    //cn.c.setAutoCommit(false);
                    cn.stmt = cn.c.createStatement();
                    sql = "Select * from weights where kind ='criterias' and name = 'Very Strong Importance'";
                    ResultSet rs = cn.stmt.executeQuery(sql);
                    boolean bool = false;
                    while(rs.next()){
                        bool = true;
                    }

                    if(bool == false){
                     sql = "insert into weights values(null, 'Very Strong Importance',6,7,8,'criterias')";
                     cn.stmt.executeUpdate(sql);
                     //JOptionPane.showMessageDialog(null, "inserted");
                    }

                    rs.close();
                    cn.stmt.close();
                    cn.c.close();
        }catch(SQLException err){
                    JOptionPane.showMessageDialog(null, "Data Base Connection Problem (new p 208) "+ err.toString());
                }
                  
                  
                   try{
                    url = System.getProperty("user.dir") + "\\datafuzzy.db";
                    cn = new Conn(url);
                    //cn.c.setAutoCommit(false);
                    cn.stmt = cn.c.createStatement();
                    sql = "Select * from weights where kind ='criterias' and name = 'Extremely Strong Importance'";
                    ResultSet rs = cn.stmt.executeQuery(sql);
                    boolean bool = false;
                    while(rs.next()){
                        bool = true;
                    }

                    if(bool == false){
                     sql = "insert into weights values(null, 'Extremely Strong Importance',7,8,9,'criterias')";
                     cn.stmt.executeUpdate(sql);
                     //JOptionPane.showMessageDialog(null, "inserted");
                    }

                    rs.close();
                    cn.stmt.close();
                    cn.c.close();
        }catch(SQLException err){
                    JOptionPane.showMessageDialog(null, "Data Base Connection Problem (new p 208) "+ err.toString());
                }
                   
                   
                   
                    try{
                    url = System.getProperty("user.dir") + "\\datafuzzy.db";
                    cn = new Conn(url);
                    //cn.c.setAutoCommit(false);
                    cn.stmt = cn.c.createStatement();
                    sql = "Select * from weights where kind ='criterias' and name = 'Absolute Importance'";
                    ResultSet rs = cn.stmt.executeQuery(sql);
                    boolean bool = false;
                    while(rs.next()){
                        bool = true;
                    }

                    if(bool == false){
                     sql = "insert into weights values(null, 'Absolute Importance',8,9,10,'criterias')";
                     cn.stmt.executeUpdate(sql);
                     //JOptionPane.showMessageDialog(null, "inserted");
                    }

                    rs.close();
                    cn.stmt.close();
                    cn.c.close();
        }catch(SQLException err){
                    JOptionPane.showMessageDialog(null, "Data Base Connection Problem (new p 208) "+ err.toString());
                }
                    
                    
                     try{
                    url = System.getProperty("user.dir") + "\\datafuzzy.db";
                    cn = new Conn(url);
                    //cn.c.setAutoCommit(false);
                    cn.stmt = cn.c.createStatement();
                    sql = "Select * from weights where kind ='alternatives' and name = 'Extremely Low'";
                    ResultSet rs = cn.stmt.executeQuery(sql);
                    boolean bool = false;
                    while(rs.next()){
                        bool = true;
                    }

                    if(bool == false){
                     sql = "insert into weights values(null, 'Extremely Low',0,0,1,'alternatives')";
                     cn.stmt.executeUpdate(sql);
                     //JOptionPane.showMessageDialog(null, "inserted");
                    }

                    rs.close();
                    cn.stmt.close();
                    cn.c.close();
        }catch(SQLException err){
                    JOptionPane.showMessageDialog(null, "Data Base Connection Problem (new p 208) "+ err.toString());
                }
                     
                     
                      try{
                    url = System.getProperty("user.dir") + "\\datafuzzy.db";
                    cn = new Conn(url);
                    //cn.c.setAutoCommit(false);
                    cn.stmt = cn.c.createStatement();
                    sql = "Select * from weights where kind ='alternatives' and name = 'Very Low'";
                    ResultSet rs = cn.stmt.executeQuery(sql);
                    boolean bool = false;
                    while(rs.next()){
                        bool = true;
                    }

                    if(bool == false){
                     sql = "insert into weights values(null, 'Very Low',0,1,3,'alternatives')";
                     cn.stmt.executeUpdate(sql);
                     //JOptionPane.showMessageDialog(null, "inserted");
                    }

                    rs.close();
                    cn.stmt.close();
                    cn.c.close();
        }catch(SQLException err){
                    JOptionPane.showMessageDialog(null, "Data Base Connection Problem (new p 208) "+ err.toString());
                }
                      
                      
                       try{
                    url = System.getProperty("user.dir") + "\\datafuzzy.db";
                    cn = new Conn(url);
                    //cn.c.setAutoCommit(false);
                    cn.stmt = cn.c.createStatement();
                    sql = "Select * from weights where kind ='alternatives' and name = 'Low'";
                    ResultSet rs = cn.stmt.executeQuery(sql);
                    boolean bool = false;
                    while(rs.next()){
                        bool = true;
                    }

                    if(bool == false){
                     sql = "insert into weights values(null, 'Low',1,3,5,'alternatives')";
                     cn.stmt.executeUpdate(sql);
                     //JOptionPane.showMessageDialog(null, "inserted");
                    }

                    rs.close();
                    cn.stmt.close();
                    cn.c.close();
        }catch(SQLException err){
                    JOptionPane.showMessageDialog(null, "Data Base Connection Problem (new p 208) "+ err.toString());
                }
                       
                        try{
                    url = System.getProperty("user.dir") + "\\datafuzzy.db";
                    cn = new Conn(url);
                    //cn.c.setAutoCommit(false);
                    cn.stmt = cn.c.createStatement();
                    sql = "Select * from weights where kind ='alternatives' and name = 'Medium'";
                    ResultSet rs = cn.stmt.executeQuery(sql);
                    boolean bool = false;
                    while(rs.next()){
                        bool = true;
                    }

                    if(bool == false){
                     sql = "insert into weights values(null, 'Medium',3,5,7,'alternatives')";
                     cn.stmt.executeUpdate(sql);
                     //JOptionPane.showMessageDialog(null, "inserted");
                    }

                    rs.close();
                    cn.stmt.close();
                    cn.c.close();
        }catch(SQLException err){
                    JOptionPane.showMessageDialog(null, "Data Base Connection Problem (new p 208) "+ err.toString());
                }
                        
                        
                         try{
                    url = System.getProperty("user.dir") + "\\datafuzzy.db";
                    cn = new Conn(url);
                    //cn.c.setAutoCommit(false);
                    cn.stmt = cn.c.createStatement();
                    sql = "Select * from weights where kind ='alternatives' and name = 'High'";
                    ResultSet rs = cn.stmt.executeQuery(sql);
                    boolean bool = false;
                    while(rs.next()){
                        bool = true;
                    }

                    if(bool == false){
                     sql = "insert into weights values(null, 'High',5,7,9,'alternatives')";
                     cn.stmt.executeUpdate(sql);
                     //JOptionPane.showMessageDialog(null, "inserted");
                    }

                    rs.close();
                    cn.stmt.close();
                    cn.c.close();
        }catch(SQLException err){
                    JOptionPane.showMessageDialog(null, "Data Base Connection Problem (new p 208) "+ err.toString());
                }
                         
                          try{
                    url = System.getProperty("user.dir") + "\\datafuzzy.db";
                    cn = new Conn(url);
                    //cn.c.setAutoCommit(false);
                    cn.stmt = cn.c.createStatement();
                    sql = "Select * from weights where kind ='alternatives' and name = 'Very High'";
                    ResultSet rs = cn.stmt.executeQuery(sql);
                    boolean bool = false;
                    while(rs.next()){
                        bool = true;
                    }

                    if(bool == false){
                     sql = "insert into weights values(null, 'Very High',7,9,10,'alternatives')";
                     cn.stmt.executeUpdate(sql);
                     //JOptionPane.showMessageDialog(null, "inserted");
                    }

                    rs.close();
                    cn.stmt.close();
                    cn.c.close();
        }catch(SQLException err){
                    JOptionPane.showMessageDialog(null, "Data Base Connection Problem (new p 208) "+ err.toString());
                }
                          
                          
                           try{
                    url = System.getProperty("user.dir") + "\\datafuzzy.db";
                    cn = new Conn(url);
                    //cn.c.setAutoCommit(false);
                    cn.stmt = cn.c.createStatement();
                    sql = "Select * from weights where kind ='alternatives' and name = 'Extremely High'";
                    ResultSet rs = cn.stmt.executeQuery(sql);
                    boolean bool = false;
                    while(rs.next()){
                        bool = true;
                    }

                    if(bool == false){
                     sql = "insert into weights values(null, 'Extremely High',9,10,10,'alternatives')";
                     cn.stmt.executeUpdate(sql);
                     //JOptionPane.showMessageDialog(null, "inserted");
                    }

                    rs.close();
                    cn.stmt.close();
                    cn.c.close();
        }catch(SQLException err){
                    JOptionPane.showMessageDialog(null, "Data Base Connection Problem (new p 208) "+ err.toString());
                }
            
         
        
        m.setExtendedState(JFrame.MAXIMIZED_BOTH);
        m.setVisible(true);
        m.setLocationRelativeTo(null);
        this.hide();
}
        catch(SQLException err){
                    JOptionPane.showMessageDialog(null, "Data Base Connection Problem (new p 208) "+ err.toString());
                }

    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Entrada.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Entrada.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Entrada.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Entrada.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Entrada().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
