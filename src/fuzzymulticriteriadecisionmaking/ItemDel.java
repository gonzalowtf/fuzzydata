/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package fuzzymulticriteriadecisionmaking;

import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;

/**
 *
 * @author gonzalowtf
 */
public class ItemDel extends javax.swing.JInternalFrame {

    /**
     * Creates new form ItemChoose
     */
    int idproblem =0;
    int iditem = 0;
    String selected = "";
    public ItemDel() {
        initComponents();
    }
    public ItemDel(String choose , String name, String pname) {
        initComponents();
        setTitle("Delete "+choose+" "+name+" ?");
        selected = choose;
       
         String url = System.getProperty("user.dir") + "\\datafuzzy.db";
       
        //JOptionPane.showMessageDialog(null, "nombre: "+name + "     lenght :"+name.length() );
        //JOptionPane.showMessageDialog(null, "choose: "+choose + "     lenght :"+choose.length() );
        //JOptionPane.showMessageDialog(null, "problem: "+ProblemN + "     lenght :"+ProblemN.length() );

        try{
        Conn cn = new Conn(url);
         //cn.c.setAutoCommit(false);
        cn.stmt = cn.c.createStatement();
        String sql = "Select idproblem from problems where name ='"+pname.trim()+"'";
        ResultSet rs = cn.stmt.executeQuery(sql);
         int idp =0;
        
        while(rs.next()){
               idp= rs.getInt(1);
               idproblem = idp;
               //JOptionPane.showMessageDialog(null,idp);
            }
        
        switch(choose){
            case "Alternative":
        sql = "Select idalternative from alternatives where name ='"+name.trim()+"' and idproblem ="+idproblem;
        rs = cn.stmt.executeQuery(sql);
         int id =0;
        
        while(rs.next()){
               id= rs.getInt(1);
               iditem = id;
               //JOptionPane.showMessageDialog(null,idp);
            }
                break;
            case "Criteria":
                sql = "Select idcriteria from criterias where name ='"+name.trim()+"' and idproblem ="+idproblem;
        rs = cn.stmt.executeQuery(sql);
         id =0;
        
        while(rs.next()){
               id= rs.getInt(1);
               iditem = id;
               //JOptionPane.showMessageDialog(null,idp);
            }
                break;
            case "Decisor":
                sql = "Select iddecisor from decisors where name ='"+name.trim()+"' and idproblem ="+idproblem;
        rs = cn.stmt.executeQuery(sql);
         id =0;
        
        while(rs.next()){
               id= rs.getInt(1);
               iditem = id;
               //JOptionPane.showMessageDialog(null,idp);
            }
                break;
        }
        
               
        cn.stmt.close();
        cn.c.close();
        }catch(SQLException err){
                    JOptionPane.showMessageDialog(null, "Data Base Connection Problem  "+ err.toString());
                }        
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cancel = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        delete = new javax.swing.JButton();

        cancel.setText("Cancel");
        cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelActionPerformed(evt);
            }
        });

        jLabel1.setText("All Data Of this Item will be erased");

        delete.setText("Delete");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 506, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(delete)
                        .addGap(27, 27, 27)
                        .addComponent(cancel)))
                .addGap(65, 65, 65))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(31, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancel)
                    .addComponent(delete))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelActionPerformed
        this.hide();
    }//GEN-LAST:event_cancelActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        
        int op = JOptionPane.showConfirmDialog(null, "Erase ?");
        //JOptionPane.showMessageDialog(null,op);
        
        if(op == 1 || op ==2){
            this.hide();
        }
        else
            if(op == 0){
                
     switch(selected){
            
         case "Problem":
        try{
            
          
        String url = System.getProperty("user.dir") + "\\datafuzzy.db";
        
        Conn cn = new Conn(url);
        cn.stmt = cn.c.createStatement();
        String sql = "delete from problems where idproblem = "+idproblem;
        cn.stmt.executeUpdate(sql);
        sql = "delete from alternatives where idproblem = "+idproblem;
        cn.stmt.executeUpdate(sql);
        sql = "delete from decisors where idproblem = "+idproblem;
        cn.stmt.executeUpdate(sql);
        sql = "delete from criterias where idproblem = "+idproblem;
        cn.stmt.executeUpdate(sql);
        sql = "delete from da where idproblem = "+idproblem;
        cn.stmt.executeUpdate(sql);
        sql = "delete from dc where idproblem = "+idproblem;
        cn.stmt.executeUpdate(sql);
                JOptionPane.showMessageDialog(null, "Problem Erased");

        this.hide();
        }catch(SQLException err){
                    JOptionPane.showMessageDialog(null, "Data Base Connection Problem (new p 208) "+ err.toString());
                }
             break;
         
         case "Alternative":
        try{
            
          
        String url = System.getProperty("user.dir") + "\\datafuzzy.db";
        
        Conn cn = new Conn(url);
        cn.stmt = cn.c.createStatement();
        String sql = "delete from alternatives where idproblem = "+idproblem+" and idalternative= "+iditem;
        cn.stmt.executeUpdate(sql);
        sql = "delete from da where idproblem = "+idproblem+" and idalternative= "+iditem;
        cn.stmt.executeUpdate(sql);
        JOptionPane.showMessageDialog(null, "Alternative Erased");

        this.hide();
        }catch(SQLException err){
                    JOptionPane.showMessageDialog(null, "Data Base Connection Problem (new p 208) "+ err.toString());
                }
             break;
        
             case "Criteria":
        try{
            
          
        String url = System.getProperty("user.dir") + "\\datafuzzy.db";
        
        Conn cn = new Conn(url);
        cn.stmt = cn.c.createStatement();
        String sql = "delete from criterias where idproblem = "+idproblem+" and idcriteria= "+iditem;
        cn.stmt.executeUpdate(sql);
        sql = "delete from dc where idproblem = "+idproblem+" and idcriteria= "+iditem;
        cn.stmt.executeUpdate(sql);
        
        JOptionPane.showMessageDialog(null, "Criteria Erased");
        this.hide();
        }catch(SQLException err){
                    JOptionPane.showMessageDialog(null, "Data Base Connection Problem (new p 208) "+ err.toString());
                }
             break;
             
       case "Decisor":
        try{
            
          
        String url = System.getProperty("user.dir") + "\\datafuzzy.db";
        
        Conn cn = new Conn(url);
        cn.stmt = cn.c.createStatement();
        String sql = "delete from decisors where idproblem = "+idproblem+" and iddecisor= "+iditem;
        cn.stmt.executeUpdate(sql);
        sql = "delete from dc where idproblem = "+idproblem+" and idcriteria= "+iditem;
        cn.stmt.executeUpdate(sql);
        sql = "delete from da where idproblem = "+idproblem+" and idalternative= "+iditem;
        cn.stmt.executeUpdate(sql);
        JOptionPane.showMessageDialog(null, "Decisor Erased");

        this.hide();
        }catch(SQLException err){
                    JOptionPane.showMessageDialog(null, "Data Base Connection Problem (new p 208) "+ err.toString());
                }
             break;
            
       
        
        
 
 
 
 } 
    
 }
            
        
        
        
        
        
    }//GEN-LAST:event_deleteActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancel;
    private javax.swing.JButton delete;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
